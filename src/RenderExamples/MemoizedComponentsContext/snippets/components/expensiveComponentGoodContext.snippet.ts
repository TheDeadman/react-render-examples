// AUTO-GENERATED by generate-snippets.js
// Source: ExpensiveComponentGoodContext.tsx
// Do not edit this file directly.

const snippet = `import { useMemo } from 'react';
import { Paper, Typography } from '@mui/material';
import { useMemoizedComponentsContext } from '../context';
import styles from 'MemoizedComponents.module.scss';

function calculateExpensiveValue(multiplier: number): number {
    console.log(
        '✅ GOOD: Calculating expensive value with useMemo - only when multiplier changes',
    );
    return multiplier * 1000;
}

const ExpensiveComponentGoodContext = () => {
    const { multiplier } = useMemoizedComponentsContext();

    // ✅ GOOD: This only recalculates when multiplier changes
    const expensiveValue = useMemo(() => {
        return calculateExpensiveValue(multiplier);
    }, [multiplier]);

    return (
        <Paper>
            <Typography>✅ Memoized Expensive Component (Context)</Typography>
            <Typography>
                ✅ useMemo prevents expensive recalculations
            </Typography>
            <Typography>Multiplier: {multiplier}</Typography>
            <Typography>Expensive Value: {expensiveValue}</Typography>
            <Typography>
                Check the console to confirm that logging only occurs when
                multiplier changes
            </Typography>
        </Paper>
    );
};

export default ExpensiveComponentGoodContext;
`;

export default snippet;
