// AUTO-GENERATED by generate-snippets.js on 2025-10-23T14:53:27.741Z
// Source: expandableList.slice.ts
// Do not edit this file directly.

const snippet = `// Generate Snippet
import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import type { RootState } from 'store/store';
import { listData } from './listData';

interface RenderCountState {
    listData: { id: number; title: string; description: string }[];
    expandedId: number | null;
}

// Define the initial state using that type
const initialState: RenderCountState = {
    listData: listData,
    expandedId: null,
};

export const expandedListSlice = createSlice({
    name: 'expandedList',
    initialState,
    reducers: {
        setExpandedId: (state, action: PayloadAction<number | null>) => {
            if (state.expandedId === action.payload) {
                state.expandedId = null; // Collapse if the same item is clicked
            } else {
                state.expandedId = action.payload;
            }
        },
    },
});

export const { setExpandedId } = expandedListSlice.actions;

// Selector that is used in the list items directly to determine if they are expanded or not
export const selectIsExpanded = (id: number) => (state: RootState) =>
    state.expandedList.expandedId === id;
export const selectListData = (state: RootState) => state.expandedList.listData;

export default expandedListSlice.reducer;
`;

export default snippet;
