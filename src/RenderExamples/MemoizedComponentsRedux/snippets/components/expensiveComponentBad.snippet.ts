// AUTO-GENERATED by generate-snippets.js on 2025-10-23T16:57:07.739Z
// Source: ExpensiveComponentBad.tsx
// Do not edit this file directly.

const snippet = `import { Paper, Typography } from '@mui/material';
import { useAppSelector } from 'store/hooks';
import {
    selectExpensiveValueBad,
    selectMultiplier,
} from '../memoizedComponents.slice';
import styles from 'MemoizedComponents.module.scss';

const ExpensiveComponentBad = () => {
    const multiplier = useAppSelector(selectMultiplier);

    // ‚ùå BAD: This will recalculate everytime part of the slice state changes even though this component does not re-render.
    const expensiveValue = useAppSelector(selectExpensiveValueBad);

    return (
        <Paper>
            <RenderCount componentName="ExpensiveComponentBad" />
            <Typography>Non-Memoized Calculation</Typography>
            <Typography>
                üîÑ Recalculates on every slice state change without a re-render
                (expensive)
            </Typography>
            <Typography>Multiplier: {multiplier}</Typography>
            <Typography>Expensive Value: {expensiveValue}</Typography>
            <Typography>
                Check the console to see how often this logs when the parent
                re-renders
            </Typography>
        </Paper>
    );
};

export default ExpensiveComponentBad;
`;

export default snippet;
